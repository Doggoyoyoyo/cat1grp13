{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { RotateInDownLeft, set } from \"react-native-reanimated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Journal_main() {\n  var _useState = useState(4),\n      _useState2 = _slicedToArray(_useState, 2),\n      chosenemoji = _useState2[0],\n      setChosenemoji = _useState2[1];\n\n  var _useState3 = useState(4),\n      _useState4 = _slicedToArray(_useState3, 2),\n      feelingsubmit = _useState4[0],\n      setfeelingsubmit = _useState4[1];\n\n  var submitHandler = function submitHandler() {\n    setfeelingsubmit(chosenemoji);\n    console.log(feelingsubmit);\n  };\n\n  var emojisize = 44;\n  return _jsxs(View, {\n    style: styles.main,\n    children: [_jsxs(View, {\n      children: [_jsx(Text, {\n        style: styles.qntext,\n        children: \"How are you feeling today?\"\n      }), _jsxs(View, {\n        style: styles.emoji_container,\n        children: [_jsx(Expression, {\n          feeling: \"emoji-happy\",\n          id: 0,\n          chosenemoji: chosenemoji,\n          emojisize: emojisize,\n          setChosenemoji: setChosenemoji\n        }), _jsx(Expression, {\n          feeling: \"emoji-neutral\",\n          id: 1,\n          chosenemoji: chosenemoji,\n          emojisize: emojisize,\n          setChosenemoji: setChosenemoji\n        }), _jsx(Expression, {\n          feeling: \"emoji-sad\",\n          id: 2,\n          chosenemoji: chosenemoji,\n          emojisize: emojisize,\n          setChosenemoji: setChosenemoji\n        })]\n      })]\n    }), _jsx(TouchableOpacity, {\n      onPress: submitHandler,\n      children: _jsx(View, {\n        style: [styles.submitbtn, styles.shadowProp],\n        children: _jsx(Text, {\n          children: \"Submit\"\n        })\n      })\n    })]\n  });\n}\n\nfunction Expression(props) {\n  var changeemoji = function changeemoji() {\n    props.setChosenemoji(props.id);\n    console.log(props.id);\n  };\n\n  return _jsx(View, {\n    children: _jsx(TouchableOpacity, {\n      onPress: changeemoji,\n      style: styles.emoji,\n      children: _jsx(Entypo, {\n        name: props.feeling,\n        size: props.emojisize,\n        color: props.chosenemoji == props.id ? \"white\" : \"black\"\n      })\n    })\n  });\n}\n\nvar styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: \"#D4FAA4\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  emoji_container: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    backgroundColor: \"#D9D9D9\",\n    borderRadius: 5,\n    marginTop: 20,\n    marginBottom: 20\n  },\n  emoji: {\n    margin: 10\n  },\n  qntext: {\n    fontSize: 20\n  },\n  submitbtn: {\n    fontSize: 24,\n    backgroundColor: \"#5ECEE7\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 150,\n    height: 50,\n    borderRadius: 5\n  },\n  shadowProp: {\n    shadowColor: \"#171717\",\n    shadowOffset: {\n      width: 1,\n      height: 3\n    },\n    shadowOpacity: 0.4,\n    shadowRadius: 2\n  }\n});","map":{"version":3,"names":["React","useState","StatusBar","Entypo","RotateInDownLeft","set","Journal_main","chosenemoji","setChosenemoji","feelingsubmit","setfeelingsubmit","submitHandler","console","log","emojisize","styles","main","qntext","emoji_container","submitbtn","shadowProp","Expression","props","changeemoji","id","emoji","feeling","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","flexDirection","borderRadius","marginTop","marginBottom","margin","fontSize","width","height","shadowColor","shadowOffset","shadowOpacity","shadowRadius"],"sources":["/Users/phoebepoh/cat1grp13/cat1grp13/Components/Journal_main.js"],"sourcesContent":["import \"react-native-gesture-handler\";\nimport React, { useState } from \"react\";\nimport { StatusBar } from \"expo-status-bar\";\nimport { StyleSheet, Text, View, TouchableOpacity } from \"react-native\";\nimport { Entypo } from \"@expo/vector-icons\";\nimport { RotateInDownLeft, set } from \"react-native-reanimated\";\n\nexport default function Journal_main() {\n  const [chosenemoji, setChosenemoji] = useState(4);\n  const [feelingsubmit, setfeelingsubmit] = useState(4);\n  //feelingsubmit: 0 -> happy, 1-> neutral, 2-> sad, 4 -> not chosen yet.\n\n  const submitHandler = () => {\n    setfeelingsubmit(chosenemoji);\n    console.log(feelingsubmit);\n  };\n\n  const emojisize = 44;\n\n  return (\n    <View style={styles.main}>\n      <View>\n        <Text style={styles.qntext}>How are you feeling today?</Text>\n        <View style={styles.emoji_container}>\n          <Expression\n            feeling=\"emoji-happy\"\n            id={0}\n            chosenemoji={chosenemoji}\n            emojisize={emojisize}\n            setChosenemoji={setChosenemoji}\n          />\n          <Expression\n            feeling=\"emoji-neutral\"\n            id={1}\n            chosenemoji={chosenemoji}\n            emojisize={emojisize}\n            setChosenemoji={setChosenemoji}\n          />\n          <Expression\n            feeling=\"emoji-sad\"\n            id={2}\n            chosenemoji={chosenemoji}\n            emojisize={emojisize}\n            setChosenemoji={setChosenemoji}\n          />\n        </View>\n      </View>\n      <TouchableOpacity onPress={submitHandler}>\n        <View style={[styles.submitbtn, styles.shadowProp]}>\n          <Text>Submit</Text>\n        </View>\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nfunction Expression(props) {\n  const changeemoji = () => {\n    props.setChosenemoji(props.id);\n    console.log(props.id);\n  };\n\n  return (\n    <View>\n      <TouchableOpacity onPress={changeemoji} style={styles.emoji}>\n        <Entypo\n          name={props.feeling}\n          size={props.emojisize}\n          color={props.chosenemoji == props.id ? \"white\" : \"black\"}\n        />\n      </TouchableOpacity>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  main: {\n    flex: 1,\n    backgroundColor: \"#D4FAA4\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  emoji_container: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    backgroundColor: \"#D9D9D9\",\n    \n    borderRadius: 5,\n    marginTop: 20,\n    marginBottom: 20,\n  },\n  emoji: {\n    margin: 10,\n  },\n\n  qntext: {\n    fontSize: 20,\n    //fontFamily: 'Helvetica',\n  },\n  submitbtn: {\n    fontSize: 24,\n    backgroundColor: \"#5ECEE7\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 150,\n    height: 50,\n    borderRadius: 5,\n  },\n  shadowProp: {\n    shadowColor: \"#171717\",\n    shadowOffset: { width: 1, height: 3 },\n    shadowOpacity: 0.4,\n    shadowRadius: 2,\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}